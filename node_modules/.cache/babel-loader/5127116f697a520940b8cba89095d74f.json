{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\azure-search-react-template\\\\src\\\\components\\\\Pager\\\\Pager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Pager.css';\nexport default function Pager(props) {\n  _s();\n\n  let [selectedPage, setSelectedPage] = useState(parseInt(props.currentPage));\n  let totalPages = Math.ceil(props.resultCount / props.resultsPerPage);\n  useEffect(_ => {\n    props.setCurrentPage(selectedPage);\n  }, [selectedPage, props]);\n\n  function goToNextPage() {\n    setSelectedPage(selectedPage + 1);\n  }\n\n  function goToPreviousPage() {\n    setSelectedPage(selectedPage - 1);\n  }\n\n  var i = 0;\n  var page_links = [];\n  var minPage = 1;\n  var maxPage = totalPages;\n\n  if (selectedPage - minPage > 2) {\n    minPage = selectedPage - 2;\n  }\n\n  if (maxPage - selectedPage > 2) {\n    maxPage = parseInt(selectedPage) + 2;\n  }\n\n  for (i = minPage; i <= maxPage; i++) {\n    if (i === parseInt(selectedPage)) {\n      page_links.push( /*#__PURE__*/React.createElement(\"li\", {\n        className: \"page-item active\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"page-link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, i)));\n    } else {\n      page_links.push( /*#__PURE__*/React.createElement(\"li\", {\n        className: \"page-item\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"page-link\",\n        id: i,\n        onClick: e => setSelectedPage(parseInt(e.currentTarget.id)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, i)));\n    }\n  }\n\n  var previousButton;\n\n  if (parseInt(selectedPage) === 1) {\n    previousButton = /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item disabled\",\n      key: \"prev\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"page-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, \"Previous\"));\n  } else {\n    previousButton = /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item\",\n      key: \"prev\",\n      onClick: goToPreviousPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"page-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, \"Previous\"));\n  }\n\n  var nextButton;\n\n  if (parseInt(selectedPage) === totalPages) {\n    nextButton = /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item disabled\",\n      key: \"next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"page-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, \"Next\"));\n  } else {\n    nextButton = /*#__PURE__*/React.createElement(\"li\", {\n      className: \"page-item\",\n      key: \"next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"page-link\",\n      onClick: goToNextPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, \"Next\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": \"...\",\n    className: \"pager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"pagination item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, previousButton, page_links, nextButton));\n}\n\n_s(Pager, \"Q4cxl4NAedC//VWWg+nretu3gk4=\");\n\n_c = Pager;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pager\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/azure-search-react-template/src/components/Pager/Pager.js"],"names":["React","useState","useEffect","Pager","props","selectedPage","setSelectedPage","parseInt","currentPage","totalPages","Math","ceil","resultCount","resultsPerPage","_","setCurrentPage","goToNextPage","goToPreviousPage","i","page_links","minPage","maxPage","push","e","currentTarget","id","previousButton","nextButton"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport './Pager.css';\r\n\r\nexport default function Pager(props) {\r\n\r\n    let [selectedPage, setSelectedPage] = useState(parseInt(props.currentPage));\r\n    let totalPages = Math.ceil(props.resultCount / props.resultsPerPage);\r\n\r\n    useEffect(_=>{\r\n        props.setCurrentPage(selectedPage);\r\n    }, [selectedPage, props]);\r\n\r\n    function goToNextPage() {\r\n        setSelectedPage(selectedPage + 1);\r\n    }\r\n\r\n    function goToPreviousPage() {\r\n        setSelectedPage(selectedPage - 1);\r\n    }\r\n\r\n    var i = 0;\r\n    var page_links = [];\r\n\r\n    var minPage = 1;\r\n    var maxPage = totalPages;\r\n\r\n    if (selectedPage - minPage > 2) {\r\n        minPage = selectedPage - 2;\r\n    }\r\n\r\n    if (maxPage - selectedPage > 2) {\r\n        maxPage = parseInt(selectedPage) + 2;\r\n    }\r\n\r\n\r\n    for (i = minPage; i <= maxPage; i++) {\r\n        if (i === parseInt(selectedPage)) {\r\n            page_links.push(\r\n                <li className=\"page-item active\" key={i}>\r\n                    <span className=\"page-link\">\r\n                        {i}\r\n                    </span>\r\n                </li>\r\n            );\r\n        } else {\r\n            page_links.push(\r\n                <li className=\"page-item\" key={i}>\r\n                    <button className=\"page-link\" id={i} onClick={(e) => setSelectedPage(parseInt(e.currentTarget.id))}>{i}</button>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    var previousButton;\r\n    if (parseInt(selectedPage) === 1) {\r\n        previousButton = (<li className=\"page-item disabled\" key=\"prev\">\r\n                            <span className=\"page-link\">Previous</span>\r\n                        </li>);\r\n    } else {\r\n        previousButton = (<li className=\"page-item\" key=\"prev\" onClick={goToPreviousPage}>\r\n                            <button className=\"page-link\">Previous</button>\r\n                        </li>);\r\n    }\r\n\r\n    var nextButton;\r\n    if (parseInt(selectedPage) === totalPages) {\r\n        nextButton = (<li className=\"page-item disabled\" key=\"next\">\r\n                            <span className=\"page-link\">Next</span>\r\n                        </li>);\r\n    } else {\r\n        nextButton = (<li className=\"page-item\" key=\"next\" >\r\n                            <button className=\"page-link\" onClick={goToNextPage}>Next</button>\r\n                        </li>);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <nav aria-label=\"...\"  className=\"pager\">\r\n            <ul className=\"pagination item\">\r\n                {previousButton}\r\n                {page_links}\r\n                {nextButton}\r\n            </ul>\r\n        </nav>\r\n    );\r\n\r\n    }"]},"metadata":{},"sourceType":"module"}