{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\azure-search-react-template\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Suggestions from './Suggestions/Suggestions';\nimport \"./SearchBar.css\";\nexport default function SearchBar(props) {\n  _s();\n\n  let [q, setQ] = useState(\"\");\n  let [suggestions, setSuggestions] = useState([]);\n  let [showSuggestions, setShowSuggestions] = useState(false);\n\n  const onSearchHandler = () => {\n    props.postSearchHandler(q);\n    setShowSuggestions(false);\n  };\n\n  const suggestionClickHandler = s => {\n    document.getElementById(\"search-box\").value = s;\n    setShowSuggestions(false);\n    props.postSearchHandler(s);\n  };\n\n  const onEnterButton = event => {\n    if (event.keyCode === 13) {\n      onSearchHandler();\n    }\n  };\n\n  const onChangeHandler = () => {\n    var searchTerm = document.getElementById(\"search-box\").value;\n    setShowSuggestions(true);\n    setQ(searchTerm); // use this prop if you want to make the search more reactive\n\n    if (props.searchChangeHandler) {\n      props.searchChangeHandler(searchTerm);\n    }\n  };\n\n  useEffect(_ => {\n    const timer = setTimeout(() => {\n      const body = {\n        q: q,\n        top: 5,\n        suggester: 'sg'\n      };\n\n      if (q === '') {\n        setSuggestions([]);\n      } else {\n        axios.post('/api/suggest', body).then(response => {\n          setSuggestions(response.data.suggestions);\n        }).catch(error => {\n          console.log(error);\n          setSuggestions([]);\n        });\n      }\n    }, 300);\n    return () => clearTimeout(timer);\n  }, [q]);\n  var suggestionDiv;\n\n  if (showSuggestions) {\n    suggestionDiv = /*#__PURE__*/React.createElement(Suggestions, {\n      suggestions: suggestions,\n      suggestionClickHandler: s => suggestionClickHandler(s),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 26\n      }\n    });\n  } else {\n    suggestionDiv = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 26\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    onKeyDown: e => onEnterButton(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"suggestions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    autoComplete: \"off\" // setting for browsers; not the app\n    ,\n    type: \"text\",\n    id: \"search-box\",\n    className: \"form-control rounded-0\",\n    placeholder: \"What are you looking for?\",\n    onChange: onChangeHandler,\n    defaultValue: props.q,\n    onBlur: () => setShowSuggestions(false),\n    onClick: () => setShowSuggestions(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), suggestionDiv), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary rounded-0\",\n    type: \"submit\",\n    onClick: onSearchHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Search\"))));\n}\n\n_s(SearchBar, \"Zx1hObtVNM+XmhuYVRRsRfgX3Bk=\");\n\n_c = SearchBar;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/azure-search-react-template/src/components/SearchBar/SearchBar.js"],"names":["React","useState","useEffect","axios","Suggestions","SearchBar","props","q","setQ","suggestions","setSuggestions","showSuggestions","setShowSuggestions","onSearchHandler","postSearchHandler","suggestionClickHandler","s","document","getElementById","value","onEnterButton","event","keyCode","onChangeHandler","searchTerm","searchChangeHandler","_","timer","setTimeout","body","top","suggester","post","then","response","data","catch","error","console","log","clearTimeout","suggestionDiv","e"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Suggestions from './Suggestions/Suggestions';\r\n\r\nimport \"./SearchBar.css\";\r\n\r\nexport default function SearchBar(props) {\r\n\r\n    let [q, setQ] = useState(\"\");\r\n    let [suggestions, setSuggestions] = useState([]);\r\n    let [showSuggestions, setShowSuggestions] = useState(false);\r\n\r\n    const onSearchHandler = () => {\r\n        props.postSearchHandler(q);\r\n        setShowSuggestions(false);\r\n    }\r\n\r\n    const suggestionClickHandler = (s) => {\r\n        document.getElementById(\"search-box\").value = s;\r\n        setShowSuggestions(false);\r\n        props.postSearchHandler(s);    \r\n    }\r\n\r\n    const onEnterButton = (event) => {\r\n        if (event.keyCode === 13) {\r\n            onSearchHandler();\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = () => {\r\n        var searchTerm = document.getElementById(\"search-box\").value;\r\n        setShowSuggestions(true);\r\n        setQ(searchTerm);\r\n\r\n        // use this prop if you want to make the search more reactive\r\n        if (props.searchChangeHandler) {\r\n            props.searchChangeHandler(searchTerm);\r\n        }\r\n    }\r\n\r\n    useEffect(_ =>{\r\n        const timer = setTimeout(() => {\r\n            const body = {\r\n                q: q,\r\n                top: 5,\r\n                suggester: 'sg'\r\n            };\r\n\r\n            if (q === '') {\r\n                setSuggestions([]);\r\n            } else {\r\n                axios.post( '/api/suggest', body)\r\n                .then( response => {\r\n                    setSuggestions(response.data.suggestions);\r\n                } )\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    setSuggestions([]);\r\n                });\r\n            }\r\n        }, 300);\r\n        return () => clearTimeout(timer);\r\n    }, [q]);\r\n\r\n    var suggestionDiv;\r\n    if (showSuggestions) {\r\n        suggestionDiv = (<Suggestions suggestions={suggestions} suggestionClickHandler={(s) => suggestionClickHandler(s)}></Suggestions>);\r\n    } else {\r\n        suggestionDiv = (<div></div>);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"input-group\" onKeyDown={e => onEnterButton(e)}>\r\n                <div className=\"suggestions\" >\r\n                    <input \r\n                        autoComplete=\"off\" // setting for browsers; not the app\r\n                        type=\"text\" \r\n                        id=\"search-box\" \r\n                        className=\"form-control rounded-0\" \r\n                        placeholder=\"What are you looking for?\" \r\n                        onChange={onChangeHandler} \r\n                        defaultValue={props.q}\r\n                        onBlur={() => setShowSuggestions(false)}\r\n                        onClick={() => setShowSuggestions(true)}>\r\n                    </input>\r\n                    {suggestionDiv}\r\n                </div>\r\n                <div className=\"input-group-btn\">\r\n                    <button className=\"btn btn-primary rounded-0\" type=\"submit\" onClick={onSearchHandler}>\r\n                        Search\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}