{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\azure-search-react-template\\\\src\\\\components\\\\Facets\\\\Facets.js\";\nimport React from 'react';\nimport { List, Chip } from '@material-ui/core';\nimport CheckboxFacet from './CheckboxFacet/CheckboxFacet';\nimport styled from 'styled-components';\nimport \"./Facets.css\";\nexport default function Facets(props) {\n  function mapFacetName(facetName) {\n    const capitalizeFirstLetter = string => string[0] ? `${string[0].toUpperCase()}${string.substring(1)}` : '';\n\n    facetName = facetName.trim();\n    facetName = capitalizeFirstLetter(facetName);\n    facetName = facetName.replace('_', ' ');\n    return facetName;\n  }\n\n  function addFilter(name, value) {\n    const newFilters = props.filters.concat({\n      field: name,\n      value: value\n    });\n    props.setFilters(newFilters);\n  }\n\n  function removeFilter(filter) {\n    const newFilters = props.filters.filter(item => item.value !== filter.value);\n    props.setFilters(newFilters);\n  }\n\n  var facets;\n\n  try {\n    facets = Object.keys(props.facets).map(key => {\n      return /*#__PURE__*/React.createElement(CheckboxFacet, {\n        key: key,\n        name: key,\n        values: props.facets[key],\n        addFilter: addFilter,\n        removeFilter: removeFilter,\n        mapFacetName: mapFacetName,\n        selectedFacets: props.filters.filter(f => f.field === key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }\n      });\n    });\n  } catch (error) {\n    console.log(error);\n  }\n\n  const filters = props.filters.map((filter, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: `${mapFacetName(filter.field)}: ${filter.value}`,\n      onDelete: () => removeFilter(filter),\n      className: \"chip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"facetPanel\",\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"facetbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"clearFilters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"filterlist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, filters)), /*#__PURE__*/React.createElement(FacetList, {\n    component: \"nav\",\n    className: \"listitem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, facets)));\n}\n_c = Facets;\n;\nconst FacetList = styled(List)({\n  marginTop: '32px !important'\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"Facets\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/azure-search-react-template/src/components/Facets/Facets.js"],"names":["React","List","Chip","CheckboxFacet","styled","Facets","props","mapFacetName","facetName","capitalizeFirstLetter","string","toUpperCase","substring","trim","replace","addFilter","name","value","newFilters","filters","concat","field","setFilters","removeFilter","filter","item","facets","Object","keys","map","key","f","error","console","log","index","FacetList","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { List, Chip } from '@material-ui/core';\r\nimport CheckboxFacet from './CheckboxFacet/CheckboxFacet';\r\nimport styled from 'styled-components';\r\nimport \"./Facets.css\";\r\n\r\nexport default function Facets(props) {\r\n\r\n    function mapFacetName(facetName) {\r\n        const capitalizeFirstLetter = (string) =>\r\n            string[0] ? `${string[0].toUpperCase()}${string.substring(1)}` : '';\r\n        facetName = facetName.trim();\r\n        facetName = capitalizeFirstLetter(facetName);\r\n\r\n        facetName = facetName.replace('_', ' ');\r\n        return facetName;\r\n    }\r\n\r\n    function addFilter(name, value) {\r\n        const newFilters = props.filters.concat({ field: name, value: value });\r\n        props.setFilters(newFilters);\r\n    }\r\n\r\n    function removeFilter(filter) {      \r\n        const newFilters = props.filters.filter((item) => item.value !== filter.value);\r\n        props.setFilters(newFilters);\r\n    }\r\n\r\n    var facets;\r\n    try{\r\n        facets = Object.keys(props.facets).map(key => {\r\n            return <CheckboxFacet \r\n                key={key}\r\n                name={key} \r\n                values={props.facets[key]}\r\n                addFilter={addFilter}\r\n                removeFilter={removeFilter}\r\n                mapFacetName={mapFacetName}\r\n                selectedFacets={props.filters.filter( f => f.field === key)}\r\n              />;\r\n          });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n    const filters = props.filters.map((filter, index) => {\r\n            return (\r\n            <li key={index}>\r\n                <Chip \r\n                    label={`${mapFacetName(filter.field)}: ${filter.value}`} \r\n                    onDelete={() => removeFilter(filter)}\r\n                    className=\"chip\"\r\n              />\r\n            </li>);\r\n          });\r\n\r\n\r\n    return (\r\n        <div id=\"facetPanel\" className=\"box\">\r\n            <div className=\"facetbox\">\r\n                <div id=\"clearFilters\">\r\n                <ul className=\"filterlist\">\r\n                    {filters}\r\n                </ul>\r\n                </div>\r\n                <FacetList component=\"nav\" className=\"listitem\" >\r\n                    {facets}\r\n                </FacetList>    \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst FacetList = styled(List)({\r\n    marginTop: '32px !important'\r\n})\r\n"]},"metadata":{},"sourceType":"module"}